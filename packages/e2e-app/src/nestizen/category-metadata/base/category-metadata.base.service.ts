// This file is generated by @nestizen/graphql-plugin. DO NOT MANUALLY EDIT!
/* eslint-disable */
import { Injectable } from '@nestjs/common';
import { Prisma, CategoryMetadata } from '@prisma/client';
import { PrismaService } from '../../../prisma/prisma.service';

@Injectable()
export class CategoryMetadataBaseService {
  constructor(protected readonly prisma: PrismaService) {}

  async aggregate(args: Prisma.CategoryMetadataAggregateArgs) {
    return this.prisma.client.categoryMetadata.aggregate(args);
  }

  async createMany(args: Prisma.CategoryMetadataCreateManyArgs) {
    return this.prisma.client.categoryMetadata.createMany(args);
  }

  async deleteMany(args: Prisma.CategoryMetadataDeleteManyArgs) {
    return this.prisma.client.categoryMetadata.deleteMany(args);
  }

  async findFirst(args: Prisma.CategoryMetadataFindFirstArgs) {
    return this.prisma.client.categoryMetadata.findFirst(args);
  }

  async findMany(args: Prisma.CategoryMetadataFindManyArgs) {
    return this.prisma.client.categoryMetadata.findMany(args);
  }

  async findUnique(args: Prisma.CategoryMetadataFindUniqueArgs) {
    return this.prisma.client.categoryMetadata.findUnique(args);
  }

  async groupBy(args: Prisma.CategoryMetadataGroupByArgs) {
    return this.prisma.client.categoryMetadata.groupBy(args);
  }

  async updateMany(args: Prisma.CategoryMetadataUpdateManyArgs) {
    return this.prisma.client.categoryMetadata.updateMany(args);
  }

  async count(args: Prisma.CategoryMetadataCountArgs) {
    return this.prisma.client.categoryMetadata.count(args);
  }

  async category(parent: CategoryMetadata) {
    return this.prisma.client.categoryMetadata
      .findUniqueOrThrow({
        where: {
          id: parent.id,
        },
      })
      .category();
  }
}
