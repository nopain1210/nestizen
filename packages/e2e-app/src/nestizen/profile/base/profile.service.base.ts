/**
 * -----------------------------------------------------------------------------
 * WARNING:
 * This file is auto-generated by @nestizen/graphql-plugin.
 * Changes to this file will be lost if the code is regenerated.
 * -----------------------------------------------------------------------------
 */

import type { Prisma, Profile } from '@zenstackhq/runtime/models';
import { PrismaService } from '../../../prisma/prisma.service';

export class ProfileServiceBase {
  constructor(public readonly prisma: PrismaService) {}

  async findUnique(args: Prisma.ProfileFindUniqueArgs) {
    return this.prisma.client.profile.findUnique(args);
  }

  async findMany(args: Prisma.ProfileFindManyArgs) {
    return this.prisma.client.profile.findMany(args);
  }

  async create(args: Prisma.ProfileCreateArgs) {
    return this.prisma.client.profile.create(args);
  }

  async update(args: Prisma.ProfileUpdateArgs) {
    return this.prisma.client.profile.update(args);
  }

  async delete(args: Prisma.ProfileDeleteArgs) {
    return this.prisma.client.profile.delete(args);
  }

  async count(args: Prisma.ProfileCountArgs) {
    return this.prisma.client.profile.count(args);
  }

  async aggregate(args: Prisma.ProfileAggregateArgs) {
    return this.prisma.client.profile.aggregate(args);
  }

  async resolveUser(parent: Profile) {
    return this.prisma.client.profile
      .findUniqueOrThrow({
        where: { id: parent.id },
      })
      .user();
  }
}
