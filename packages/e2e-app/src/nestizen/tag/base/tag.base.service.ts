// This file is generated by @nestizen/graphql-plugin. DO NOT MANUALLY EDIT!
/* eslint-disable */
import { Injectable } from '@nestjs/common';
import { Prisma, Tag } from '@prisma/client';
import { PrismaService } from '../../../prisma/prisma.service';

@Injectable()
export class TagBaseService {
  constructor(protected readonly prisma: PrismaService) {}

  async aggregate(args: Prisma.TagAggregateArgs) {
    return this.prisma.client.tag.aggregate(args);
  }

  async createMany(args: Prisma.TagCreateManyArgs) {
    return this.prisma.client.tag.createMany(args);
  }

  async deleteMany(args: Prisma.TagDeleteManyArgs) {
    return this.prisma.client.tag.deleteMany(args);
  }

  async findFirst(args: Prisma.TagFindFirstArgs) {
    return this.prisma.client.tag.findFirst(args);
  }

  async findMany(args: Prisma.TagFindManyArgs) {
    return this.prisma.client.tag.findMany(args);
  }

  async findUnique(args: Prisma.TagFindUniqueArgs) {
    return this.prisma.client.tag.findUnique(args);
  }

  async groupBy(args: Prisma.TagGroupByArgs) {
    return this.prisma.client.tag.groupBy(args);
  }

  async updateMany(args: Prisma.TagUpdateManyArgs) {
    return this.prisma.client.tag.updateMany(args);
  }

  async count(args: Prisma.TagCountArgs) {
    return this.prisma.client.tag.count(args);
  }

  async users(parent: Tag, args: Prisma.UserFindManyArgs) {
    return this.prisma.client.tag
      .findUniqueOrThrow({
        where: {
          key: parent.key,
        },
      })
      .users(args);
  }
}
